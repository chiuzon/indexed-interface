/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface AdapterRegistryInterface extends ethers.utils.Interface {
  functions: {
    "addProtocolAdapter(address)": FunctionFragment;
    "addTokenAdapter(address)": FunctionFragment;
    "addTokenAdapters(address[])": FunctionFragment;
    "addVault(address)": FunctionFragment;
    "addVaultFactory(address)": FunctionFragment;
    "approvedVaultFactories(address)": FunctionFragment;
    "c_0x0ce931e7(bytes32)": FunctionFragment;
    "getAdapterForWrapperToken(address)": FunctionFragment;
    "getAdapterWithHighestAPR(address)": FunctionFragment;
    "getAdapterWithHighestAPRForDeposit(address,uint256,address)": FunctionFragment;
    "getAdaptersCount(address)": FunctionFragment;
    "getAdaptersList(address)": FunctionFragment;
    "getAdaptersSortedByAPR(address)": FunctionFragment;
    "getAdaptersSortedByAPRWithDeposit(address,uint256,address)": FunctionFragment;
    "getProtocolAdaptersAndIds()": FunctionFragment;
    "getProtocolForTokenAdapter(address)": FunctionFragment;
    "getProtocolMetadata(uint256)": FunctionFragment;
    "getSupportedTokens()": FunctionFragment;
    "getVaultsList()": FunctionFragment;
    "haveVaultFor(address)": FunctionFragment;
    "isApprovedAdapter(address)": FunctionFragment;
    "isSupported(address)": FunctionFragment;
    "owner()": FunctionFragment;
    "protocolAdapterIds(address)": FunctionFragment;
    "protocolAdapters(uint256)": FunctionFragment;
    "protocolsCount()": FunctionFragment;
    "removeProtocolAdapter(address)": FunctionFragment;
    "removeTokenAdapter(address)": FunctionFragment;
    "removeVault(address)": FunctionFragment;
    "removeVaultFactory(address)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "vaultsByUnderlying(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addProtocolAdapter",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "addTokenAdapter",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "addTokenAdapters",
    values: [string[]]
  ): string;
  encodeFunctionData(functionFragment: "addVault", values: [string]): string;
  encodeFunctionData(
    functionFragment: "addVaultFactory",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "approvedVaultFactories",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "c_0x0ce931e7",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getAdapterForWrapperToken",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getAdapterWithHighestAPR",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getAdapterWithHighestAPRForDeposit",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getAdaptersCount",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getAdaptersList",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getAdaptersSortedByAPR",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getAdaptersSortedByAPRWithDeposit",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolAdaptersAndIds",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolForTokenAdapter",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolMetadata",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getSupportedTokens",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getVaultsList",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "haveVaultFor",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "isApprovedAdapter",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "isSupported", values: [string]): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "protocolAdapterIds",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "protocolAdapters",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "protocolsCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeProtocolAdapter",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeTokenAdapter",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "removeVault", values: [string]): string;
  encodeFunctionData(
    functionFragment: "removeVaultFactory",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "vaultsByUnderlying",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "addProtocolAdapter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addTokenAdapter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addTokenAdapters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addVault", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addVaultFactory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "approvedVaultFactories",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "c_0x0ce931e7",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAdapterForWrapperToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAdapterWithHighestAPR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAdapterWithHighestAPRForDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAdaptersCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAdaptersList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAdaptersSortedByAPR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAdaptersSortedByAPRWithDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolAdaptersAndIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolForTokenAdapter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolMetadata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSupportedTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getVaultsList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "haveVaultFor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedAdapter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isSupported",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "protocolAdapterIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "protocolAdapters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "protocolsCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeProtocolAdapter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeTokenAdapter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeVaultFactory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "vaultsByUnderlying",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
    "ProtocolAdapterAdded(uint256,address)": EventFragment;
    "ProtocolAdapterRemoved(uint256)": EventFragment;
    "TokenAdapterAdded(address,uint256,address,address)": EventFragment;
    "TokenAdapterRemoved(address,uint256,address,address)": EventFragment;
    "TokenSupportAdded(address)": EventFragment;
    "TokenSupportRemoved(address)": EventFragment;
    "VaultAdded(address,address)": EventFragment;
    "VaultFactoryAdded(address)": EventFragment;
    "VaultFactoryRemoved(address)": EventFragment;
    "VaultRemoved(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProtocolAdapterAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProtocolAdapterRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenAdapterAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenAdapterRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenSupportAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenSupportRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "VaultAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "VaultFactoryAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "VaultFactoryRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "VaultRemoved"): EventFragment;
}

export class AdapterRegistry extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: AdapterRegistryInterface;

  functions: {
    addProtocolAdapter(
      protocolAdapter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addTokenAdapter(
      adapter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addTokenAdapters(
      adapters: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addVault(
      vault: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addVaultFactory(
      _factory: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    approvedVaultFactories(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    c_0x0ce931e7(
      c__0x0ce931e7: BytesLike,
      overrides?: CallOverrides
    ): Promise<[void]>;

    getAdapterForWrapperToken(
      wrapperToken: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getAdapterWithHighestAPR(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { adapter: string; apr: BigNumber }>;

    getAdapterWithHighestAPRForDeposit(
      underlying: string,
      deposit: BigNumberish,
      excludingAdapter: string,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { adapter: string; apr: BigNumber }>;

    getAdaptersCount(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAdaptersList(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<[string[]] & { list: string[] }>;

    getAdaptersSortedByAPR(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<
      [string[], BigNumber[]] & { adapters: string[]; aprs: BigNumber[] }
    >;

    getAdaptersSortedByAPRWithDeposit(
      underlying: string,
      deposit: BigNumberish,
      excludingAdapter: string,
      overrides?: CallOverrides
    ): Promise<
      [string[], BigNumber[]] & { adapters: string[]; aprs: BigNumber[] }
    >;

    getProtocolAdaptersAndIds(
      overrides?: CallOverrides
    ): Promise<
      [string[], BigNumber[]] & { adapters: string[]; ids: BigNumber[] }
    >;

    getProtocolForTokenAdapter(
      adapter: string,
      overrides?: CallOverrides
    ): Promise<[string] & { protocolAdapter: string }>;

    getProtocolMetadata(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, string] & { protocolAdapter: string; name: string }>;

    getSupportedTokens(
      overrides?: CallOverrides
    ): Promise<[string[]] & { list: string[] }>;

    getVaultsList(overrides?: CallOverrides): Promise<[string[]]>;

    haveVaultFor(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isApprovedAdapter(
      adapter: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isSupported(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    protocolAdapterIds(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    protocolAdapters(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    protocolsCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    removeProtocolAdapter(
      protocolAdapter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeTokenAdapter(
      adapter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeVault(
      vault: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeVaultFactory(
      _factory: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    vaultsByUnderlying(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  addProtocolAdapter(
    protocolAdapter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addTokenAdapter(
    adapter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addTokenAdapters(
    adapters: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addVault(
    vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addVaultFactory(
    _factory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  approvedVaultFactories(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  c_0x0ce931e7(
    c__0x0ce931e7: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  getAdapterForWrapperToken(
    wrapperToken: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getAdapterWithHighestAPR(
    underlying: string,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { adapter: string; apr: BigNumber }>;

  getAdapterWithHighestAPRForDeposit(
    underlying: string,
    deposit: BigNumberish,
    excludingAdapter: string,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber] & { adapter: string; apr: BigNumber }>;

  getAdaptersCount(
    underlying: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAdaptersList(
    underlying: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getAdaptersSortedByAPR(
    underlying: string,
    overrides?: CallOverrides
  ): Promise<
    [string[], BigNumber[]] & { adapters: string[]; aprs: BigNumber[] }
  >;

  getAdaptersSortedByAPRWithDeposit(
    underlying: string,
    deposit: BigNumberish,
    excludingAdapter: string,
    overrides?: CallOverrides
  ): Promise<
    [string[], BigNumber[]] & { adapters: string[]; aprs: BigNumber[] }
  >;

  getProtocolAdaptersAndIds(
    overrides?: CallOverrides
  ): Promise<
    [string[], BigNumber[]] & { adapters: string[]; ids: BigNumber[] }
  >;

  getProtocolForTokenAdapter(
    adapter: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getProtocolMetadata(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, string] & { protocolAdapter: string; name: string }>;

  getSupportedTokens(overrides?: CallOverrides): Promise<string[]>;

  getVaultsList(overrides?: CallOverrides): Promise<string[]>;

  haveVaultFor(underlying: string, overrides?: CallOverrides): Promise<boolean>;

  isApprovedAdapter(
    adapter: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isSupported(underlying: string, overrides?: CallOverrides): Promise<boolean>;

  owner(overrides?: CallOverrides): Promise<string>;

  protocolAdapterIds(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  protocolAdapters(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  protocolsCount(overrides?: CallOverrides): Promise<BigNumber>;

  removeProtocolAdapter(
    protocolAdapter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeTokenAdapter(
    adapter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeVault(
    vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeVaultFactory(
    _factory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  vaultsByUnderlying(arg0: string, overrides?: CallOverrides): Promise<string>;

  callStatic: {
    addProtocolAdapter(
      protocolAdapter: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    addTokenAdapter(adapter: string, overrides?: CallOverrides): Promise<void>;

    addTokenAdapters(
      adapters: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    addVault(vault: string, overrides?: CallOverrides): Promise<void>;

    addVaultFactory(_factory: string, overrides?: CallOverrides): Promise<void>;

    approvedVaultFactories(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    c_0x0ce931e7(
      c__0x0ce931e7: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    getAdapterForWrapperToken(
      wrapperToken: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getAdapterWithHighestAPR(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { adapter: string; apr: BigNumber }>;

    getAdapterWithHighestAPRForDeposit(
      underlying: string,
      deposit: BigNumberish,
      excludingAdapter: string,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { adapter: string; apr: BigNumber }>;

    getAdaptersCount(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAdaptersList(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getAdaptersSortedByAPR(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<
      [string[], BigNumber[]] & { adapters: string[]; aprs: BigNumber[] }
    >;

    getAdaptersSortedByAPRWithDeposit(
      underlying: string,
      deposit: BigNumberish,
      excludingAdapter: string,
      overrides?: CallOverrides
    ): Promise<
      [string[], BigNumber[]] & { adapters: string[]; aprs: BigNumber[] }
    >;

    getProtocolAdaptersAndIds(
      overrides?: CallOverrides
    ): Promise<
      [string[], BigNumber[]] & { adapters: string[]; ids: BigNumber[] }
    >;

    getProtocolForTokenAdapter(
      adapter: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getProtocolMetadata(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, string] & { protocolAdapter: string; name: string }>;

    getSupportedTokens(overrides?: CallOverrides): Promise<string[]>;

    getVaultsList(overrides?: CallOverrides): Promise<string[]>;

    haveVaultFor(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isApprovedAdapter(
      adapter: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isSupported(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    owner(overrides?: CallOverrides): Promise<string>;

    protocolAdapterIds(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    protocolAdapters(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    protocolsCount(overrides?: CallOverrides): Promise<BigNumber>;

    removeProtocolAdapter(
      protocolAdapter: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeTokenAdapter(
      adapter: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeVault(vault: string, overrides?: CallOverrides): Promise<void>;

    removeVaultFactory(
      _factory: string,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    vaultsByUnderlying(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;

    ProtocolAdapterAdded(
      protocolId?: null,
      protocolAdapter?: null
    ): TypedEventFilter<
      [BigNumber, string],
      { protocolId: BigNumber; protocolAdapter: string }
    >;

    ProtocolAdapterRemoved(
      protocolId?: null
    ): TypedEventFilter<[BigNumber], { protocolId: BigNumber }>;

    TokenAdapterAdded(
      adapter?: null,
      protocolId?: null,
      underlying?: null,
      wrapper?: null
    ): TypedEventFilter<
      [string, BigNumber, string, string],
      {
        adapter: string;
        protocolId: BigNumber;
        underlying: string;
        wrapper: string;
      }
    >;

    TokenAdapterRemoved(
      adapter?: null,
      protocolId?: null,
      underlying?: null,
      wrapper?: null
    ): TypedEventFilter<
      [string, BigNumber, string, string],
      {
        adapter: string;
        protocolId: BigNumber;
        underlying: string;
        wrapper: string;
      }
    >;

    TokenSupportAdded(
      underlying?: null
    ): TypedEventFilter<[string], { underlying: string }>;

    TokenSupportRemoved(
      underlying?: null
    ): TypedEventFilter<[string], { underlying: string }>;

    VaultAdded(
      underlying?: null,
      vault?: null
    ): TypedEventFilter<
      [string, string],
      { underlying: string; vault: string }
    >;

    VaultFactoryAdded(
      factory?: null
    ): TypedEventFilter<[string], { factory: string }>;

    VaultFactoryRemoved(
      factory?: null
    ): TypedEventFilter<[string], { factory: string }>;

    VaultRemoved(
      underlying?: null,
      vault?: null
    ): TypedEventFilter<
      [string, string],
      { underlying: string; vault: string }
    >;
  };

  estimateGas: {
    addProtocolAdapter(
      protocolAdapter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addTokenAdapter(
      adapter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addTokenAdapters(
      adapters: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addVault(
      vault: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addVaultFactory(
      _factory: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    approvedVaultFactories(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    c_0x0ce931e7(
      c__0x0ce931e7: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAdapterForWrapperToken(
      wrapperToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAdapterWithHighestAPR(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAdapterWithHighestAPRForDeposit(
      underlying: string,
      deposit: BigNumberish,
      excludingAdapter: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAdaptersCount(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAdaptersList(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAdaptersSortedByAPR(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAdaptersSortedByAPRWithDeposit(
      underlying: string,
      deposit: BigNumberish,
      excludingAdapter: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProtocolAdaptersAndIds(overrides?: CallOverrides): Promise<BigNumber>;

    getProtocolForTokenAdapter(
      adapter: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProtocolMetadata(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSupportedTokens(overrides?: CallOverrides): Promise<BigNumber>;

    getVaultsList(overrides?: CallOverrides): Promise<BigNumber>;

    haveVaultFor(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isApprovedAdapter(
      adapter: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isSupported(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    protocolAdapterIds(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    protocolAdapters(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    protocolsCount(overrides?: CallOverrides): Promise<BigNumber>;

    removeProtocolAdapter(
      protocolAdapter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeTokenAdapter(
      adapter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeVault(
      vault: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeVaultFactory(
      _factory: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    vaultsByUnderlying(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addProtocolAdapter(
      protocolAdapter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addTokenAdapter(
      adapter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addTokenAdapters(
      adapters: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addVault(
      vault: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addVaultFactory(
      _factory: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    approvedVaultFactories(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    c_0x0ce931e7(
      c__0x0ce931e7: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAdapterForWrapperToken(
      wrapperToken: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAdapterWithHighestAPR(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAdapterWithHighestAPRForDeposit(
      underlying: string,
      deposit: BigNumberish,
      excludingAdapter: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAdaptersCount(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAdaptersList(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAdaptersSortedByAPR(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAdaptersSortedByAPRWithDeposit(
      underlying: string,
      deposit: BigNumberish,
      excludingAdapter: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProtocolAdaptersAndIds(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProtocolForTokenAdapter(
      adapter: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProtocolMetadata(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSupportedTokens(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getVaultsList(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    haveVaultFor(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isApprovedAdapter(
      adapter: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isSupported(
      underlying: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    protocolAdapterIds(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    protocolAdapters(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    protocolsCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    removeProtocolAdapter(
      protocolAdapter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeTokenAdapter(
      adapter: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeVault(
      vault: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeVaultFactory(
      _factory: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    vaultsByUnderlying(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
