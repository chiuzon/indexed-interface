@import "~antd/dist/antd.less";
@import "./dark.less";
@import "./light.less";
@import "./outrun.less";

// -- Fonts
@font-face {
  font-family: "Main";
  src: url("./fonts/Futura.ttc");
}

// -- Variables
@header-height: 64px;
@header-icon-size: 2rem;
@spacing-tiny: 0.66rem;
@spacing-small: 1rem;
@spacing-medium: 2rem;
@spacing-large: 2rem;

// -- Theme-specific
.dark,
.light {
  .QuotePlaceholder {
    padding: 2rem 0;
  }
}

// -- Antd Changes
.ant-btn,
h1.ant-typography {
  &:extend(.fancy);
}

.ant-layout {
  &-sider-children {
    position: fixed;
    top: 63px;
    width: 300px;
    height: calc(100% - @header-height);
    z-index: 1005;

    @media screen and (max-width: 480px) {
      width: 100%;
    }
  }
}

.ant-collapse {
  margin-bottom: @spacing-medium !important;
  overflow: hidden;

  &-header {
    &:extend(.fancy);
  }
  &-content-box {
    position: relative;
    overflow: auto;
    padding: 0 !important;
  }
}

.ant-tabs-tab {
  &:last-child {
    display: none;
  }
}

.ant-card-body {
  overflow: auto;
}

// -- Global
body {
  * {
    font-family: "Main", sans-serif;
    -webkit-overflow-scrolling: smooth;
  }
}

// -- Utilities
.circular {
  border-radius: 50%;
}

.flex-center {
  display: flex !important;
  align-items: center !important;
}

.perfectly-centered {
  &:extend(.flex-center);
  justify-content: center !important;
}

.spaced-between {
  &:extend(.flex-center);
  justify-content: space-between;
}

.spaced-evenly {
  &:extend(.flex-center);
  justify-content: space-evenly;
}

.size-32 {
  width: 32px;
  height: 32px;
}

.no-margin {
  margin: 0 !important;
}

.no-margin-bottom {
  margin-bottom: 0 !important;
}

.tiny-margin-right {
  margin-right: @spacing-tiny !important;
}

.small-margin-right {
  margin-right: @spacing-small !important;
}

.small-margin-bottom {
  margin-bottom: @spacing-small !important;
}

.medium-margin-right {
  margin-right: @spacing-medium !important;
}

.fancy {
  text-transform: uppercase;
  letter-spacing: 1.5;
}

// -- Layout
.BuildingQuote {
  position: absolute;
  top: 100px;
  width: 120px;
  left: 300px;
  z-index: -1;
  transform: skewX(0deg) skewY(-45deg) scale(1.2) translateX(23px)
    translateY(23px);
}

.AppHeader {
  &:extend(.spaced-between);

  position: fixed !important;
  top: 0;
  left: 0;
  width: 100vw;
  z-index: 10010;
  border-bottom: 1px solid rgba(204, 204, 255, 0.2);
  padding-left: 12px !important;
  padding-right: 12px !important;

  @media screen and (min-width: 480px) {
    padding-left: 24px !important;
    padding-right: 24px !important;
  }

  .ant-form-item {
    margin-bottom: 14px;
  }
}

.AppMenuWrapper {
  position: fixed;
  top: 64px;
  left: 0;
  width: 100vw;
  height: calc(100vh - @header-height);
  z-index: 1005;

  @media screen and (min-width: 480px) {
    padding-bottom: 192px !important;
    top: 100px;
  }
}

.AppMenu {
  .ant-menu-item,
  .ant-menu-submenu-title {
    &:extend(.fancy);

    padding-left: @spacing-medium !important;

    a {
      &:extend(.spaced-between);
    }

    @media screen and (max-width: 480px) {
      height: 32px !important;
      line-height: 32px !important;
    }
  }
}

.AppLayout {
  .Page {
    position: relative;
    max-width: 1240px;
    min-height: 100vh;
    margin: 8rem auto 0 10rem;
    padding: @spacing-small;

    @media screen and (min-width: 480px) {
      padding: @spacing-large;
    }
    @media screen and (max-width: 480px) {
      margin: unset;
      margin-top: 8rem;
    }
  }
}

// -- Animations
@keyframes blinking {
  0% {
    opacity: 0.5;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.5;
  }
}

@keyframes twinkling {
  0% {
    background: rgba(204, 204, 255, 0.05);
  }
  50% {
    background: rgba(204, 204, 255, 0.2);
  }
  100% {
    background: rgba(204, 204, 255, 0.05);
  }
}

.AppMenuAnimation-enter {
  top: -500px;
  left: -300px;
  z-index: 1000;
}
.AppMenuAnimation-enter-active {
  top: 0;
  left: 0;
  transition: left 200ms ease-in-out, top 200ms ease-in-out;
  z-index: 1000;
}
.AppMenuAnimation-exit {
  top: 0;
  left: 0;
  z-index: 1000;
}
.AppMenuAnimation-exit-active {
  top: -500px;
  left: -300px;
  transition: left 200ms ease-in-out, top 200ms ease-in-out;
  z-index: 1000;
}

// -- Components
.Carousel {
  &:extend(.perfectly-centered);

  text-align: center;
}

.Token {
  animation: blinking 2s infinite ease-in-out;

  @media screen and (max-width: 480px) {
    width: 20px;
    height: 20px;
  }
}

.DEBUGScreenSize {
  position: fixed;
  bottom: 10px;
  right: 10px;
  padding: 1rem;
  border: 1px solid white;
  background: rgba(0, 0, 0, 0.5);
  z-index: 9999;
}

.ScrollableArrow {
  position: absolute;
  font-size: 48px;
}

.WalletConnector,
.MenuButton {
  font-size: @header-icon-size !important;
  position: relative;
  top: 9px;
}

.Logo {
  &:extend(.spaced-between);

  cursor: pointer;

  .ant-typography {
    &:extend(.no-margin-bottom);
  }
}

.LanguageSelector {
  &.is-controlled {
    position: relative;
    right: 45px;
    width: 130px;
  }
}

.ServerConnection {
  &:extend(.no-margin-bottom);

  svg {
    &:extend(.tiny-margin-right);
    position: relative;
    top: 2px;
  }
}

.ScreenHeader {
  display: flex !important;
  align-items: center !important;
  justify-content: space-between !important;
  width: 100% !important;
}

.RankedTokenWrapper {
  padding-top: 10px;
  padding-bottom: 10px;

  > .ant-space-item {
    margin-right: 10px !important;
    margin-left: 10px !important;
  }
  .ant-space-item {
    flex: 1;
    width: 100%;
  }

  .RankedToken {
    .ant-card-body {
      &:extend(.spaced-between);
    }
  }
}

.TokenSelectorDrawer {
  .ant-drawer-content {
    top: 100px !important;
    height: calc(100% - 100px) !important;
  }
}

.Performance {
  .ant-space-item {
    @media screen and (max-width: 480px) {
      flex: 1;
    }
  }
}

.NDXSubscreen {
  .ant-space-item {
    flex: 1;
  }
}

.Recent {
  .IndexCard {
    .ant-space-item {
      flex: 1 !important;
    }
  }
}

.HoldingsSubscreen {
  .ant-progress-inner {
    width: 60px !important;
    height: 60px !important;
    font-size: 16px !important;
  }
}

.SelectableToken {
  cursor: pointer;

  :hover {
    cursor: pointer;
  }
}
